diff --git a/src/client/components/ControlBar.jsx b/src/client/components/ControlBar.jsx
index 9404399..f98b22f 100644
--- a/src/client/components/ControlBar.jsx
+++ b/src/client/components/ControlBar.jsx
@@ -5,8 +5,8 @@
 import * as Tone from 'tone';
 import React from 'react';
 import { Player } from 'tone';
-import { togglePlayback } from '../helpers/audioHelpers';
-import { SET_SELECTED_SCALE } from '../reducer/reducerConstants';
+// import { togglePlayback } from '../helpers/audioHelpers';
+import { SET_SELECTED_SCALE, TOGGLE_IS_PLAYING } from '../reducer/reducerConstants';
 
 const ControlBar = React.memo(({
   scales, selectedScale, dispatch, localUserId,
@@ -16,7 +16,14 @@ const ControlBar = React.memo(({
     <div className="NavBar">
       <ul>
         <li>
-          <button type="button" onClick={togglePlayback} className="btn-play-pause">
+          <button
+            type="button"
+            className="btn-play-pause"
+            onClick={() => dispatch({
+              type: TOGGLE_IS_PLAYING,
+              payload: { localUserId },
+            })}
+          >
             {
               (Tone.Transport.state === 'stopped' || Tone.Transport.state === 'paused')
                 ? 'Play'
@@ -24,7 +31,7 @@ const ControlBar = React.memo(({
             }
           </button>
         </li>
-        <li className="scales">Scales</li>
+        <li className="scales">Scale</li>
         {
           scales
             ? scales.map((item, i) => (
diff --git a/src/client/containers/MainContainer.jsx b/src/client/containers/MainContainer.jsx
index 3569171..c883037 100644
--- a/src/client/containers/MainContainer.jsx
+++ b/src/client/containers/MainContainer.jsx
@@ -8,7 +8,7 @@ import VisualContainer from './VisualContainer';
 import HeaderContainer from './HeaderContainer';
 import Footer from '../components/Footer';
 import scales from '../constants/scales';
-import { updateNoteArray, togglePlayback } from '../helpers/audioHelpers';
+import updateNoteArray from '../helpers/audioHelpers';
 import initialState from '../constants/initBoardState';
 import reducer from '../reducer/reducer';
 import * as reducerConstants from '../reducer/reducerConstants';
diff --git a/src/client/helpers/audioHelpers.js b/src/client/helpers/audioHelpers.js
index 6ef096d..d5f3cc3 100644
--- a/src/client/helpers/audioHelpers.js
+++ b/src/client/helpers/audioHelpers.js
@@ -1,7 +1,7 @@
-import * as Tone from 'tone';
+// import * as Tone from 'tone';
 import scales from '../constants/scales';
 
-export const updateNoteArray = (grid, scaleNum, rootOctaveNum) => {
+const updateNoteArray = (grid, scaleNum, rootOctaveNum) => {
   const retArr = [];
   let curNote;
   let oct;
@@ -24,13 +24,15 @@ export const updateNoteArray = (grid, scaleNum, rootOctaveNum) => {
   return retArr;
 };
 
-export const togglePlayback = async (e) => {
-  await Tone.start();
+export default updateNoteArray;
 
-  if (Tone.Transport.state === 'stopped' || Tone.Transport.state === 'paused') {
-    Tone.Transport.start();
-  }
-  else {
-    Tone.Transport.pause();
-  }
-};
+// export const togglePlayback = async (e) => {
+//   await Tone.start();
+
+//   if (Tone.Transport.state === 'stopped' || Tone.Transport.state === 'paused') {
+//     Tone.Transport.start();
+//   }
+//   else {
+//     Tone.Transport.pause();
+//   }
+// };
diff --git a/src/client/reducer/reducer.jsx b/src/client/reducer/reducer.jsx
index 0665680..1b18e8e 100644
--- a/src/client/reducer/reducer.jsx
+++ b/src/client/reducer/reducer.jsx
@@ -1,3 +1,4 @@
+import * as Tone from 'tone';
 import * as reducerConstants from './reducerConstants';
 import { socket } from '../helpers/socket';
 import scales from '../constants/scales';
@@ -86,22 +87,30 @@ const reducer = (state, action) => {
     }
 
     case reducerConstants.TOGGLE_IS_PLAYING: {
+      // export const togglePlayback = async (e) => {
+      // await Tone.start();
+
+      if (Tone.Transport.state === 'stopped' || Tone.Transport.state === 'paused') {
+        Tone.Transport.start();
+      }
+      else {
+        Tone.Transport.pause();
+        // };
+      }
+
+      // console.log('Current Play State', state.users[action.payload.localUserId].isPlaying);
+      // const curPlayState = ;
       newState = {
         ...state,
         users: {
           ...state.users,
           [action.payload.localUserId]: {
             ...state.users[action.payload.localUserId],
-            isPlaying: false,
+            isPlaying: !state.users[action.payload.localUserId].isPlaying,
           },
         },
       };
-      // users: {
-      //           ...state.users,
-      //           [action.payload.localUserId]: {
-      //           isPlaying: !state.status.isPlaying,
-      //         },
-      //       };
+      console.log('Current Play State', state.users[action.payload.localUserId].isPlaying);
       socket.emit('updateServerState', newState, socket.id);
       return newState;
     }
@@ -152,6 +161,7 @@ const reducer = (state, action) => {
       console.log('reducer -> set selected scale', newState);
 
       // TODO This is gonna break - other users need to know what scale you're using
+      socket.emit('updateServerState', newState, socket.id);
       return newState;
     }
 
